name: "Terraform CD"

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
    secrets:
      PROD_SA:
        required: true
      NONPROD_SA:
        required: true
      SHARED_SA:
        required: true 
      BOOTSTRAP_SA:
        required: true     
      WORKLOAD_IDENTITY_PROVIDER:
        required: true

jobs:
  terraform:
    name: "Terraform CD"
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Select service account
        id: select_sa
        run: |
          if [[ "${{ inputs.working-directory }}" == "${{ vars.STAGING1_DIR }}" || "${{ inputs.working-directory }}" == "${{ vars.STAGING2_DIR }}" || "${{ inputs.working-directory }}" == "${{ vars.SANDBOX_DIR }}" ]]; then
            SA=${{ secrets.NONPROD_SA }}
            echo "service-account=$SA" >> $GITHUB_OUTPUT
          elif [[ "${{ inputs.working-directory }}" == "${{ vars.PROD_DIR }}" ]]; then
            SA=${{ secrets.PROD_SA }}
            echo "service-account=$SA" >> $GITHUB_OUTPUT
          elif [[ "${{ inputs.working-directory }}" == "${{ vars.SHARED_DIR }}" ]]; then
            SA=${{ secrets.SHARED_SA }}
            echo "service-account=$SA" >> $GITHUB_OUTPUT
          elif [[ "${{ inputs.working-directory }}" == "${{ vars.ORG_DIR }}" || "${{ inputs.working-directory }}" == "${{ vars.SECURITY_DIR }}" ]]; then
            SA=${{ secrets.BOOTSTRAP_SA }}
            echo "service-account=$SA" >> $GITHUB_OUTPUT
          else
            echo "service-account=" >> $GITHUB_OUTPUT
          fi

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ steps.select_sa.outputs.service-account }}
          token_format: 'access_token'
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && ( github.event_name == 'push' || github.event_name == 'workflow_dispatch' )
        run: terraform apply -auto-approve -input=false  
        